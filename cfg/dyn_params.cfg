#!/usr/bin/env python
PACKAGE = "gazebo_crab_plugin"

from dynamic_reconfigure.parameter_generator_catkin import *



gen = ParameterGenerator()


# controller: PID gains and clamp values
gen.add( "p_gain",      double_t, 0, "PID controller p gain",    1.0, 0,   1000 )
gen.add( "i_gain",      double_t, 0, "PID controller i gain",    0.1, 0,   1000 )
gen.add( "d_gain",      double_t, 0, "PID controller d gain",    0.1, 0,   1000 )
gen.add( "i_clamp_min", double_t, 0, "PID controller d gain",    -0.1,-1000,  0 )
gen.add( "i_clamp_max", double_t, 0, "PID controller d gain",    0.1, 0,   1000 )
# controller: velocity related parameters
gen.add( "velocity_max",     double_t, 0, "upper limit of the controllers target velocity (radians/s)",    1.6, 0,   1 )
gen.add( "velocity_damping", double_t, 0, "damping factor when calculating the desired joint velocity",    .05, 0,   1 )
# controller: overall multiplier (for convenience)
gen.add( "pid_multiplier",   double_t, 0, "multiplier of the PID correction value",                        1.0, 0,   100 )


# left over from the tutorial:
#
#gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
#gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
#gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
#gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

#size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                       gen.const("Medium",     int_t, 1, "A medium constant"),
#                       gen.const("Large",      int_t, 2, "A large constant"),
#                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                     "An enum to set size")

#gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "gazebo_crab_plugin", "dyn_params"))
